< 3장 : Agile Software Development >

목차 : 
    - Agile Method란?
    - Agile Development Techniques
    - Agile Project Management
    - Scailing Agile Methods
    
 
 ** Agile Method 
    
    *** Rapid Software Development
        >> 요즘은, 빨리 개발하는 것이 제일 중요하다!(Time-to-Market) 
          ex)코로나19 터졌을 때, 관련된 서비스를 만들면 처음이라 사람들이 많이 쓰겠지만, 지금 완성해서 내면 이미 관련된 앱들이 많을 것이다!
            -> 그만큼 빨리 만들어야 한다는 것! 제때, 빨리 만드는것보다 중요한것은 없다!
            -> 공공,복지 부분에 있어서는 안그렇겠지만, 판매, 비즈니스를 위해서는 누구보다 빨리 만들어야 사람들이 쓴다. 
        >> 실질적으로 안정적인 Requirement를 가지고 개발하는 것은 거의 불가능하다. 나중에 Change를 잡아넣고 개선하면 된다.
        >> 고객 입장에서는 좋은 방법은 아니다. EarlyAdopter들은, 빠르게 쓰니까 이것저것 문제 생기는데, 나중에 패치해서 나오게 되는 것임. 
        >> Plan-Driven의 경우, Time-to-Market에는 적합하지 못하다. 큰 시스템에, 긴 시스템을 가지고 검증해나가는 방법이기 때문
        >> Agile 개발 방법이 그래서 아직도 많은 사랑을 받게 된다. Delivery 시간을 엄청 줄이고, 빨리 개발할 수 있기 때문
        >> 어떤 앱들은 Update를 굉장히 자주 하는데, 이런 것들이 Agile 방법론으로 만든 것임.
        
    ***  Agile Development
        >> Program Specification / Design / Implementation  3개를 같이 한다
        >> 굉장히 다양한 버전이 나오게 됨.
        >> 버전이 안되면, Incremental 이라도 나온다. 
        >> 이해당사자의 경우, User, 개발자 등등이 다 포함된 것임. 다같이 참여해서 Spec과 Evaluation이 계속 일어남
        >> 잦은 Delivery, 빨리빨리 배포판이 나온다.
        >> 매일마다 하면 관리하기 힘드니, Tool(자동화 테스팅 같은) 것들을 사용한다. 그렇지 않다면, 테스트할때마다 시간 먹을 것임. 
          (Tool들의 도움을 많이 받아야)
        >> Documentation도 적게 해야 함. 대부분 코드를 짜는데 시간을 들이고 문서화는 최대한 적게 만들어야 함! (코드짜는데도 바쁘다)
        
    *** Agile Methods : 
        >> 1980년~1990년대쯤 만들어졌다.
        >> "코드에 집중". 설계보다는 코드에 집중해라! 만들면 장땡이라는 마인드.
        >> 그다음 다시 설계를 하자. 흔히 잘 짜여진 설계를 가지고 만드는것보다는 거리가 멀다. 
        >> 만약 건축물을 이렇게 하면, 망할것임. 실제로 지반공사 하는게 더 중요함!(뼈대잡는게)
        >> 하지만, 이런 프로그램들은 아무리 망해도 생명에 지장이 있는 것은 아님! 치명적인 피해가 일어나지 않는다. 
        >> 의료, 군사용, 교통(자율주행) 프로그램들이 이렇게 개발되면 망한다! Safe Critical System의 경우 Waterfall로 많이 한다
        >> Agile은, 그렇게 해도 되는 애들만 보통 이렇게 Time-To-Market함. Iterative-Approach/빨리 Delivery / Change에 대한 것도 빨리
           해결해 줘야 함!  -> 이렇게 되면 Agile이 되게 좋다. (그래도 되는 애들만 한다~)
           
        >> 목표 : Reduce Overhead ( Document 만드는데 시간을 너무 많이 쓰지 마라~). 문서화를 최소화시키는 것. 그 시간에 개발해라!
        (Plan-Driven이랑은 다르다. 긴 시간동안 큰 프로젝트를 하고, 여러명이 붙어 하고, 문서를 계속 확인하는데 Agile은 일단 짜라는 식! 
        나중에 바꾸면 된다는 마인드)
        
   *** The principles of Agile Methods
   
    >> Customer Involvement(팀에 Customer를 붙여서 하자)
    >> Incremental Delivery(자주, 하나하나 내자.)
    >> People not process (절차보다는 같이 일하는 팀원들이 더 중요하다!)
    >> Embrace Change(Change를 우선적으로 반영해라!)
    >> Maintain Simplicity(단순함을 유지하자. Simple하게 일단 구현하자! 구현하고 확인하자) 
    
    >> 개발을 간결하게 하자~
    
   *** Agile Method Applicability
    >> Agile 방법론을 사용할 만한 곳은, 작거나 중간정도 급 되는 프로젝트에 쓴다
    >> Safety-Critical한 곳에는 쓰면 안됨. 에러가 지장을 안 주는 선의 프로젝트에서만 사용가능함. 
    >> Custom-System(이미 어떤 조직에 맞게끔 커스텀하는! Customer가 직접 참여할 수 있는 형태의 개발)
        -> 아무리 중간, medium급이라도, Customer가 없으면 바로 수정받고, 새로 Deliver할 수 없다!
        
        
